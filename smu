#!/bin/bash

source /dev/stdin <<<"$(curl -s "https://raw.githubusercontent.com/dotbrains/utilities/master/utilities.sh")"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Path to the 'set-me-up' directory
readonly smu_home_dir=${smu_home_dir:-"${HOME}/set-me-up"}

# Get the absolute path of the 'scripts' directory.
# This is only for aesthetic reasons to have an absolute symlink path instead of a relative one
# <path-to-smu>/scripts/somedotfile vs <path-to-smu>/scripts/brew/../somedotfile
readonly installer_scripts_path="${smu_home_dir}/set-me-up-installer/scripts"

# Get the absolute path of the 'utilities' directory.
readonly installer_utilities_path="${smu_home_dir}/set-me-up-installer/utilities"

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

# Determine if we're on MacOS or Debian
if [[ "$OSTYPE" == "darwin"* ]]; then
	readonly SMU_OS="MacOS"
elif [[ "$OSTYPE" == "linux-gnu"* ]]; then
	readonly SMU_OS="debian"
fi

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

create_bash_local() {

	declare -r FILE_PATH="$HOME/.bash.local"

	# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

	if [[ ! -e "$FILE_PATH" ]] || [[ -z "$FILE_PATH" ]]; then
		printf "%s\n" "#!/bin/bash" >>"$FILE_PATH"
	fi

}

install_brew() {

	bash "${installer_scripts_path}"/brew/brew.sh

}

# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

main() {
	# This is a wrapper script for 'smu.py'.
	# It is used to check if the (minimal) required dependencies are installed.
	# If they are not installed, then this script will attempt to install them.

	bash "${installer_utilities_path}"/header.sh

	# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

	# Check if detected OS is supported
	if [[ "${SMU_OS}" != "MacOS" ]] && [[ "${SMU_OS}" != "debian" ]]; then
		error "Sorry, '${bold}set-me-up${normal}' is not supported on your OS.\n"
		exit 1
	fi

	success "Detected 'set-me-up' version: ${bold}${SMU_OS}${normal}."

	printf "\n"

	# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

	# Check if ~/.bash.local exists
	if [ ! -f "${HOME}/.bash.local" ]; then
		warn "'~/.bash.local' does not exist."

		# We must first create the $HOME/.bash.local configuration file
		# in order for the brew module to properly install Homebrew.
		create_bash_local
	fi

	# Check if 'brew' is installed
	# This step will manually initialize the Homebrew installation
	# into the current shell context if it is already installed.
	# Otherwise, if 'brew' is not installed, we will install it.

	if is_brew_installed; then
		warn "'brew' is not installed."

		install_brew
	else
		success "'brew' is installed."
	fi

	if ! cmd_exists "python3"; then
		warn "'python3' is not installed."

		# Install 'python3' via 'brew' and 'pyenv'
		# 'pyenv' is a Python version management tool
		# see: https://github.com/pyenv/pyenv
		bash "${installer_scripts_path}"/python/pyenv.sh
	else
		success "'python3' is installed."
	fi

	# Check if 'rcm' is installed, because it is required for this script to work.
	# 'rcm' is a dotfile management tool that is used to symlink files into the home directory.
	# see: https://github.com/thoughtbot/rcm

	# 'rcm' commands
	commands=(
		"rcup"
		"rcdn"
		"lsrc"
	)

	if ! cmd_exists "${commands[@]}"; then
		warn "'rcm' is not installed."

		# Install 'rcm' via 'brew'
		bash "${installer_scripts_path}"/rcm/rcm.sh
	else
		success "'rcm' is installed."
	fi

	# Determine if 'git' is installed
	if ! cmd_exists "git"; then
		warn "'git' is not installed."

		# Install 'git' via 'brew'
		brew_install "git"
	else
		success "'git' is installed."
	fi

	# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

	# Check that the 'smu.py' script exists
	if [ ! -f "${smu_home_dir}/set-me-up-installer/smu.py" ]; then
		error "'smu.py' does not exist."
		exit 1
	fi

	# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

	# Pull the latest changes from the 'set-me-up-installer' repository

	git -C "${smu_home_dir}"/set-me-up-installer pull origin main --quiet

	# - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -

	python3 "${smu_home_dir}"/set-me-up-installer/smu.py "$@"

}

main "$@"
